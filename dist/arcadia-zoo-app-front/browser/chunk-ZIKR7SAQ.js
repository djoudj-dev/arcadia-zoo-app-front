import{$ as c,P as h,T as t,W as o,a as l,b as s,k as p,nc as d,qc as r,s as m}from"./chunk-TKCV3HAR.js";var b=class n{constructor(a){this.http=a}apiUrl=`${r.apiUrl}/api/animals`;habitatUrl=`${r.apiUrl}/api/habitats`;imageBaseUrl=`${r.apiUrl}/api`;animalsCache$=new p(1);cacheLoaded=!1;getAnimals(){return this.cacheLoaded||this.http.get(this.apiUrl).pipe(m(a=>a.map(e=>s(l({},e),{images:e.images?`${this.imageBaseUrl}/${e.images}`:""}))),h(1),t(a=>{this.animalsCache$.next(a),this.cacheLoaded=!0})).subscribe(),this.animalsCache$}getAnimalById(a){return this.getAnimals().pipe(m(e=>{let i=e.find(f=>f.id_animal===a);return i?.images&&(i.images=i.images.startsWith("http")?i.images:`${r.apiUrl}/api/${i.images}`),i}))}getHabitatById(a){return this.http.get(`${this.habitatUrl}/${a}`)}addAnimal(a){return this.http.post(this.apiUrl,a).pipe(t(()=>this.clearCache()))}updateAnimal(a){return this.http.put(`${this.apiUrl}/${a.id_animal}`,a).pipe(t(()=>this.clearCache()))}deleteAnimal(a){return this.http.delete(`${this.apiUrl}/${a}`).pipe(t(()=>this.clearCache()))}clearCache(){this.animalsCache$.next([]),this.cacheLoaded=!1}markAnimalAsFed(a,e){return this.http.post(`${this.apiUrl}/${a}/feeding`,s(l({},e),{feedingTime:new Date,animalId:a}))}static \u0275fac=function(e){return new(e||n)(c(d))};static \u0275prov=o({token:n,factory:n.\u0275fac,providedIn:"root"})};export{b as a};
